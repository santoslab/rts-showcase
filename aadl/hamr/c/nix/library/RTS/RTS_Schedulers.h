#ifndef SIREUM_H_RTS_Schedulers
#define SIREUM_H_RTS_Schedulers

#ifdef __cplusplus
extern "C" {
#endif

#include <types.h>

void RTS_Schedulers_init(STACK_FRAME_ONLY);

Map_EB5A91 RTS_Schedulers_threadNickNames(STACK_FRAME_ONLY);
RTS_ProcessorTimingProperties RTS_Schedulers_RTS_i_Instance_rts_processor_timingProperties(STACK_FRAME_ONLY);
RTS_ThreadTimingProperties RTS_Schedulers_RTS_i_Instance_instrumentationMock_instrumentationMockThread_timingProperties(STACK_FRAME_ONLY);
RTS_ThreadTimingProperties RTS_Schedulers_RTS_i_Instance_eventControlMock_eventControlMockThread_timingProperties(STACK_FRAME_ONLY);
RTS_ThreadTimingProperties RTS_Schedulers_RTS_i_Instance_actuatorsMock_actuatorsMockThread_timingProperties(STACK_FRAME_ONLY);
RTS_ThreadTimingProperties RTS_Schedulers_RTS_i_Instance_actuationSubsystem_actuationUnit1_temperatureLogic_coincidenceLogic_timingProperties(STACK_FRAME_ONLY);
RTS_ThreadTimingProperties RTS_Schedulers_RTS_i_Instance_actuationSubsystem_actuationUnit1_pressureLogic_coincidenceLogic_timingProperties(STACK_FRAME_ONLY);
RTS_ThreadTimingProperties RTS_Schedulers_RTS_i_Instance_actuationSubsystem_actuationUnit1_saturationLogic_coincidenceLogic_timingProperties(STACK_FRAME_ONLY);
RTS_ThreadTimingProperties RTS_Schedulers_RTS_i_Instance_actuationSubsystem_actuationUnit1_tempPressureTripOut_orLogic_timingProperties(STACK_FRAME_ONLY);
RTS_ThreadTimingProperties RTS_Schedulers_RTS_i_Instance_actuationSubsystem_actuationUnit2_temperatureLogic_coincidenceLogic_timingProperties(STACK_FRAME_ONLY);
RTS_ThreadTimingProperties RTS_Schedulers_RTS_i_Instance_actuationSubsystem_actuationUnit2_pressureLogic_coincidenceLogic_timingProperties(STACK_FRAME_ONLY);
RTS_ThreadTimingProperties RTS_Schedulers_RTS_i_Instance_actuationSubsystem_actuationUnit2_saturationLogic_coincidenceLogic_timingProperties(STACK_FRAME_ONLY);
RTS_ThreadTimingProperties RTS_Schedulers_RTS_i_Instance_actuationSubsystem_actuationUnit2_tempPressureTripOut_orLogic_timingProperties(STACK_FRAME_ONLY);
RTS_ThreadTimingProperties RTS_Schedulers_RTS_i_Instance_actuationSubsystem_tempPressureActuatorUnit_actuateTempPressureActuator_orLogic_timingProperties(STACK_FRAME_ONLY);
RTS_ThreadTimingProperties RTS_Schedulers_RTS_i_Instance_actuationSubsystem_tempPressureActuatorUnit_tempPressureActuator_actuator_timingProperties(STACK_FRAME_ONLY);
RTS_ThreadTimingProperties RTS_Schedulers_RTS_i_Instance_actuationSubsystem_saturationActuatorUnit_actuateSaturationActuator_orLogic_timingProperties(STACK_FRAME_ONLY);
RTS_ThreadTimingProperties RTS_Schedulers_RTS_i_Instance_actuationSubsystem_saturationActuatorUnit_saturationActuator_actuator_timingProperties(STACK_FRAME_ONLY);
IS_FDDCB6 RTS_Schedulers_roundRobinSchedule(STACK_FRAME_ONLY);
Z RTS_Schedulers_framePeriod(STACK_FRAME_ONLY);
Z RTS_Schedulers_numComponents(STACK_FRAME_ONLY);
Z RTS_Schedulers_maxExecutionTime(STACK_FRAME_ONLY);
art_scheduling_static_Schedule_DScheduleSpec RTS_Schedulers_defaultStaticSchedule(STACK_FRAME_ONLY);
IS_FDDCB6 RTS_Schedulers_defaultDomainToBridgeIdMap(STACK_FRAME_ONLY);

void RTS_Schedulers_getRoundRobinScheduler(STACK_FRAME art_scheduling_roundrobin_RoundRobin result, Option_FEE1DB schedule);

void RTS_Schedulers_getStaticSchedulerH(STACK_FRAME art_scheduling_static_StaticScheduler result, MOption_AEC260 userProvided);

void RTS_Schedulers_getLegacyScheduler(STACK_FRAME art_scheduling_legacy_Legacy result);

void RTS_Schedulers_getStaticScheduler(STACK_FRAME art_scheduling_static_StaticScheduler result, art_scheduling_static_Schedule_DScheduleSpec schedule, IS_FDDCB6 domainToBridgeIdMap, Map_EB5A91 threadNickNames, art_scheduling_static_CommandProvider commandProvider);

void RTS_Schedulers_init_threadNickNames(STACK_FRAME_ONLY);

void RTS_Schedulers_init_RTS_i_Instance_rts_processor_timingProperties(STACK_FRAME_ONLY);

void RTS_Schedulers_init_RTS_i_Instance_instrumentationMock_instrumentationMockThread_timingProperties(STACK_FRAME_ONLY);

void RTS_Schedulers_init_RTS_i_Instance_eventControlMock_eventControlMockThread_timingProperties(STACK_FRAME_ONLY);

void RTS_Schedulers_init_RTS_i_Instance_actuatorsMock_actuatorsMockThread_timingProperties(STACK_FRAME_ONLY);

void RTS_Schedulers_init_RTS_i_Instance_actuationSubsystem_actuationUnit1_temperatureLogic_coincidenceLogic_timingProperties(STACK_FRAME_ONLY);

void RTS_Schedulers_init_RTS_i_Instance_actuationSubsystem_actuationUnit1_pressureLogic_coincidenceLogic_timingProperties(STACK_FRAME_ONLY);

void RTS_Schedulers_init_RTS_i_Instance_actuationSubsystem_actuationUnit1_saturationLogic_coincidenceLogic_timingProperties(STACK_FRAME_ONLY);

void RTS_Schedulers_init_RTS_i_Instance_actuationSubsystem_actuationUnit1_tempPressureTripOut_orLogic_timingProperties(STACK_FRAME_ONLY);

void RTS_Schedulers_init_RTS_i_Instance_actuationSubsystem_actuationUnit2_temperatureLogic_coincidenceLogic_timingProperties(STACK_FRAME_ONLY);

void RTS_Schedulers_init_RTS_i_Instance_actuationSubsystem_actuationUnit2_pressureLogic_coincidenceLogic_timingProperties(STACK_FRAME_ONLY);

void RTS_Schedulers_init_RTS_i_Instance_actuationSubsystem_actuationUnit2_saturationLogic_coincidenceLogic_timingProperties(STACK_FRAME_ONLY);

void RTS_Schedulers_init_RTS_i_Instance_actuationSubsystem_actuationUnit2_tempPressureTripOut_orLogic_timingProperties(STACK_FRAME_ONLY);

void RTS_Schedulers_init_RTS_i_Instance_actuationSubsystem_tempPressureActuatorUnit_actuateTempPressureActuator_orLogic_timingProperties(STACK_FRAME_ONLY);

void RTS_Schedulers_init_RTS_i_Instance_actuationSubsystem_tempPressureActuatorUnit_tempPressureActuator_actuator_timingProperties(STACK_FRAME_ONLY);

void RTS_Schedulers_init_RTS_i_Instance_actuationSubsystem_saturationActuatorUnit_actuateSaturationActuator_orLogic_timingProperties(STACK_FRAME_ONLY);

void RTS_Schedulers_init_RTS_i_Instance_actuationSubsystem_saturationActuatorUnit_saturationActuator_actuator_timingProperties(STACK_FRAME_ONLY);

void RTS_Schedulers_init_roundRobinSchedule(STACK_FRAME_ONLY);

void RTS_Schedulers_init_framePeriod(STACK_FRAME_ONLY);

void RTS_Schedulers_init_numComponents(STACK_FRAME_ONLY);

void RTS_Schedulers_init_maxExecutionTime(STACK_FRAME_ONLY);

void RTS_Schedulers_init_defaultStaticSchedule(STACK_FRAME_ONLY);

void RTS_Schedulers_init_defaultDomainToBridgeIdMap(STACK_FRAME_ONLY);

#ifdef __cplusplus
}
#endif

#endif