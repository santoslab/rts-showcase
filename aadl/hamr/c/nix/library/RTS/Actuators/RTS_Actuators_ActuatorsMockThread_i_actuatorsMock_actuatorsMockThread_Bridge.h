#ifndef SIREUM_H_RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge
#define SIREUM_H_RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge

#ifdef __cplusplus
extern "C" {
#endif

#include <types.h>

void RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_init(STACK_FRAME_ONLY);

Option_638957 RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_c_initialization_api(STACK_FRAME_ONLY);
void RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_c_initialization_api_a(STACK_FRAME Option_638957 p_c_initialization_api);
Option_549EB3 RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_c_operational_api(STACK_FRAME_ONLY);
void RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_c_operational_api_a(STACK_FRAME Option_549EB3 p_c_operational_api);

// RTS.Actuators.ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge

#define RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_id_(this) ((this)->id)
#define RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_name_(this) ((String) &(this)->name)
#define RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_dispatchProtocol_(this) ((art_DispatchPropertyProtocol) &(this)->dispatchProtocol)
#define RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_dispatchTriggers_(this) ((Option_0247A1) &(this)->dispatchTriggers)
#define RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_tempPressureActuate_(this) ((art_Port_C0524D) &(this)->tempPressureActuate)
#define RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_saturationActuate_(this) ((art_Port_C0524D) &(this)->saturationActuate)
#define RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_ports_(this) ((art_Bridge_Ports) &(this)->ports)
#define RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_initialization_api_(this) ((RTS_Actuators_ActuatorsMockThread_i_Initialization_Api) &(this)->initialization_api)
#define RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_operational_api_(this) ((RTS_Actuators_ActuatorsMockThread_i_Operational_Api) &(this)->operational_api)
#define RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_entryPoints_(this) ((art_Bridge_EntryPoints) &(this)->entryPoints)

B RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge__eq(RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge this, RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge other);
inline B RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge__ne(RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge this, RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge other) {
  return !RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge__eq(this, other);
};
B RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge__equiv(RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge this, RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge other);
inline B RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge__inequiv(RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge this, RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge other) {
  return !RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge__equiv(this, other);
};
void RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_string_(STACK_FRAME String result, RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge this);
void RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_cprint(RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge this, B isOut);

inline B RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge__is(STACK_FRAME void* this) {
  return ((RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge) this)->type == TRTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge;
}

inline RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge__as(STACK_FRAME void *this) {
  if (RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge__is(CALLER this)) return (RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge) this;
  sfAbortImpl(CALLER "Invalid cast to RTS.Actuators.ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge.");
  abort();
}

void RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_apply(STACK_FRAME RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge this, art_Art_BridgeId id, String name, art_DispatchPropertyProtocol dispatchProtocol, Option_0247A1 dispatchTriggers, art_Port_C0524D tempPressureActuate, art_Port_C0524D saturationActuate);

void RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_init_c_initialization_api(STACK_FRAME_ONLY);

void RTS_Actuators_ActuatorsMockThread_i_actuatorsMock_actuatorsMockThread_Bridge_init_c_operational_api(STACK_FRAME_ONLY);

#ifdef __cplusplus
}
#endif

#endif