// #Sireum

// Do not edit this file as it will be overwritten if HAMR codegen is rerun

package RTS.Instrumentation

import org.sireum._
import art._

@ext object InstrumentationMockThread_i_instrumentationMock_instrumentationMockThread_seL4Nix {
  // send payload 'd' to components connected to seL4's unit1_temperatureLogic_channel1 port
  def unit1_temperatureLogic_channel1_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit1_temperatureLogic_channel2 port
  def unit1_temperatureLogic_channel2_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit1_temperatureLogic_channel3 port
  def unit1_temperatureLogic_channel3_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit1_temperatureLogic_channel4 port
  def unit1_temperatureLogic_channel4_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit1_pressureLogic_channel1 port
  def unit1_pressureLogic_channel1_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit1_pressureLogic_channel2 port
  def unit1_pressureLogic_channel2_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit1_pressureLogic_channel3 port
  def unit1_pressureLogic_channel3_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit1_pressureLogic_channel4 port
  def unit1_pressureLogic_channel4_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit1_saturationLogic_channel1 port
  def unit1_saturationLogic_channel1_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit1_saturationLogic_channel2 port
  def unit1_saturationLogic_channel2_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit1_saturationLogic_channel3 port
  def unit1_saturationLogic_channel3_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit1_saturationLogic_channel4 port
  def unit1_saturationLogic_channel4_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit2_temperatureLogic_channel1 port
  def unit2_temperatureLogic_channel1_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit2_temperatureLogic_channel2 port
  def unit2_temperatureLogic_channel2_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit2_temperatureLogic_channel3 port
  def unit2_temperatureLogic_channel3_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit2_temperatureLogic_channel4 port
  def unit2_temperatureLogic_channel4_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit2_pressureLogic_channel1 port
  def unit2_pressureLogic_channel1_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit2_pressureLogic_channel2 port
  def unit2_pressureLogic_channel2_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit2_pressureLogic_channel3 port
  def unit2_pressureLogic_channel3_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit2_pressureLogic_channel4 port
  def unit2_pressureLogic_channel4_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit2_saturationLogic_channel1 port
  def unit2_saturationLogic_channel1_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit2_saturationLogic_channel2 port
  def unit2_saturationLogic_channel2_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit2_saturationLogic_channel3 port
  def unit2_saturationLogic_channel3_Send(d: DataContent): Unit = $

  // send payload 'd' to components connected to seL4's unit2_saturationLogic_channel4 port
  def unit2_saturationLogic_channel4_Send(d: DataContent): Unit = $
}
